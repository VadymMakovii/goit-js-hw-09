{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAoBC,SAASC,cAAc,SAC3CC,EAAeH,EAAkBE,cAAc,qBAC/CE,EAAcJ,EAAkBE,cAAc,oBAC9CG,EAAgBL,EAAkBE,cAAc,sBAuBtD,SAASI,EAAcC,EAAUC,GAC7BC,YAAW,WACK,IAAIC,SAAQ,SAACC,EAASC,GAClBC,KAAKC,SAAW,IAEpCH,EAAQ,qBAAoCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAElDI,EAAO,oBAAmCG,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,IAE1CQ,MAAK,SAAAC,GACfnB,EAAAoB,OAAOC,QAAQ,KAAcJ,OAAPE,GAAU,CAACG,SAAS,G,IAErCC,OAAM,SAAAC,GACLxB,EAAAoB,OAAOK,QAAQ,KAAWR,OAANO,GAAS,CAAEF,SAAS,G,MAEvCZ,E,CArCaR,EAAkBE,cAAc,UAExCsB,iBAAiB,SAE7B,SAA0BC,GACxBA,EAAEC,iBACF,IAAMC,EAAYC,OAAOxB,EAAYyB,OAC/BC,EAAaF,OAAOvB,EAAcwB,OAClCE,EAAgBD,EAAa,EAC7BE,EAAYJ,OAAOzB,EAAa0B,OAClCI,EAAeD,EACnB,GAAIL,EAAY,GAAKK,EAAY,EAChC,OAAOlC,EAAAoB,OAAOgB,QAAQ,gCAAiC,CAAC3B,SAAU,gBAAiB4B,QAAS,IAAMC,MAAO,QAASC,SAAU,OAAQC,kBAAmB,OAAQC,cAAc,EAAOC,oBAAoB,IAClM,GAAIV,GAAc,EACvB,OAAOhC,EAAAoB,OAAOgB,QAAQ,yCAA0C,CAAC3B,SAAU,gBAAiB4B,QAAS,IAAMC,MAAO,QAASC,SAAU,OAAQC,kBAAmB,OAAQC,cAAc,EAAOC,oBAAoB,IACjN,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAcU,GAAK,EACvCnC,EAAcmC,EAAGR,GACjBA,GAAgBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst formCreatePromise = document.querySelector('.form');\nconst delayInputEl = formCreatePromise.querySelector('input[name=delay]');\nconst stepInputEl = formCreatePromise.querySelector('input[name=step]');\nconst amountInputEl = formCreatePromise.querySelector('input[name=amount]');\nconst submitBTnEl = formCreatePromise.querySelector('button');\n\nsubmitBTnEl.addEventListener('click', onClickBtnSubmit);\n\nfunction onClickBtnSubmit(e) {\n  e.preventDefault();\n  const stepDelay = Number(stepInputEl.value);\n  const userAmount = Number(amountInputEl.value);\n  const quantityCall = (userAmount + 1);\n  const userDelay = Number(delayInputEl.value);\n  let currentDelay = userDelay;\n  if (stepDelay < 0 || userDelay < 0) {\n   return Notify.warning('Please enter a positive value', {position: 'center-center', timeout: 2000, width: '300px', fontSize: '16px', cssAnimationStyle: 'zoom', pauseOnHover: false, showOnlyTheLastOne: true});\n  } else if (userAmount <= 0) {\n    return Notify.warning('Amount value must be greater than zero', {position: 'center-center', timeout: 2000, width: '300px', fontSize: '16px', cssAnimationStyle: 'zoom', pauseOnHover: false, showOnlyTheLastOne: true});\n  } for (let i = 1; i < quantityCall; i += 1) {\n    createPromise(i, currentDelay);\n    currentDelay += stepDelay;\n  };\n};\n\n\nfunction createPromise(position, delay) {\n    setTimeout(() => {\n    const promise = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(`Fulfilled promise ${position} in ${delay}ms`);\n  } \n    reject(`Rejected promise ${position} in ${delay}ms`);\n  });\n  promise.then(result => {\nNotify.success(`✅ ${result}`, {useIcon: false});\n  })\n    .catch(error => {\n      Notify.failure(`❌ ${error}`, { useIcon: false });\n});\n    }, delay);\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formCreatePromise","document","querySelector","$ce04d3a99e08e73b$var$delayInputEl","$ce04d3a99e08e73b$var$stepInputEl","$ce04d3a99e08e73b$var$amountInputEl","$ce04d3a99e08e73b$var$createPromise","position","delay","setTimeout","Promise","resolve","reject","Math","random","concat","then","result","Notify","success","useIcon","catch","error","failure","addEventListener","e","preventDefault","stepDelay","Number","value","userAmount","quantityCall","userDelay","currentDelay","warning","timeout","width","fontSize","cssAnimationStyle","pauseOnHover","showOnlyTheLastOne","i"],"version":3,"file":"03-promises.e8339f0c.js.map"}