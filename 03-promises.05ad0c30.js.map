{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAoBC,SAASC,cAAc,SAC3CC,EAAeH,EAAkBE,cAAc,qBAC/CE,EAAcJ,EAAkBE,cAAc,oBAC9CG,EAAgBL,EAAkBE,cAAc,sBAuBtD,SAASI,EAAcC,EAAUC,GAC7BC,YAAW,KACK,IAAIC,SAAQ,CAACC,EAASC,KAClBC,KAAKC,SAAW,IAEpCH,EAAQ,qBAAqBJ,QAAeC,OAE5CI,EAAO,oBAAoBL,QAAeC,MAAU,IAE9CO,MAAKC,IACflB,EAAAmB,OAAOC,QAAQ,KAAGF,IAAY,CAAGG,SAAS,GAAO,IAE5CC,OAAMC,IACLvB,EAAAmB,OAAOK,QAAQ,KAAGD,IAAS,CAAIF,SAAS,GAAQ,GACpD,GACKX,E,CArCaR,EAAkBE,cAAc,UAExCqB,iBAAiB,SAE7B,SAA0BC,GACxBA,EAAEC,iBACF,MAAMC,EAAYC,OAAOvB,EAAYwB,OAC/BC,EAAaF,OAAOtB,EAAcuB,OAClCE,EAAgBD,EAAa,EAC7BE,EAAYJ,OAAOxB,EAAayB,OACtC,IAAII,EAAeD,EACnB,GAAIL,EAAY,GAAKK,EAAY,EAChC,OAAOjC,EAAAmB,OAAOgB,QAAQ,gCAAiC,CAAC1B,SAAU,gBAAiB2B,QAAS,IAAMC,MAAO,QAASC,SAAU,OAAQC,kBAAmB,OAAQC,cAAc,EAAOC,oBAAoB,IAClM,GAAIV,GAAc,EACvB,OAAO/B,EAAAmB,OAAOgB,QAAQ,yCAA0C,CAAC1B,SAAU,gBAAiB2B,QAAS,IAAMC,MAAO,QAASC,SAAU,OAAQC,kBAAmB,OAAQC,cAAc,EAAOC,oBAAoB,IACjN,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAcU,GAAK,EACvClC,EAAckC,EAAGR,GACjBA,GAAgBN,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst formCreatePromise = document.querySelector('.form');\nconst delayInputEl = formCreatePromise.querySelector('input[name=delay]');\nconst stepInputEl = formCreatePromise.querySelector('input[name=step]');\nconst amountInputEl = formCreatePromise.querySelector('input[name=amount]');\nconst submitBTnEl = formCreatePromise.querySelector('button');\n\nsubmitBTnEl.addEventListener('click', onClickBtnSubmit);\n\nfunction onClickBtnSubmit(e) {\n  e.preventDefault();\n  const stepDelay = Number(stepInputEl.value);\n  const userAmount = Number(amountInputEl.value);\n  const quantityCall = (userAmount + 1);\n  const userDelay = Number(delayInputEl.value);\n  let currentDelay = userDelay;\n  if (stepDelay < 0 || userDelay < 0) {\n   return Notify.warning('Please enter a positive value', {position: 'center-center', timeout: 2000, width: '300px', fontSize: '16px', cssAnimationStyle: 'zoom', pauseOnHover: false, showOnlyTheLastOne: true});\n  } else if (userAmount <= 0) {\n    return Notify.warning('Amount value must be greater than zero', {position: 'center-center', timeout: 2000, width: '300px', fontSize: '16px', cssAnimationStyle: 'zoom', pauseOnHover: false, showOnlyTheLastOne: true});\n  } for (let i = 1; i < quantityCall; i += 1) {\n    createPromise(i, currentDelay);\n    currentDelay += stepDelay;\n  };\n};\n\n\nfunction createPromise(position, delay) {\n    setTimeout(() => {\n    const promise = new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(`Fulfilled promise ${position} in ${delay}ms`);\n  } \n    reject(`Rejected promise ${position} in ${delay}ms`);\n  });\n  promise.then(result => {\nNotify.success(`✅ ${result}`, {useIcon: false});\n  })\n    .catch(error => {\n      Notify.failure(`❌ ${error}`, { useIcon: false });\n});\n    }, delay);\n};"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formCreatePromise","document","querySelector","$47d4ff9957288465$var$delayInputEl","$47d4ff9957288465$var$stepInputEl","$47d4ff9957288465$var$amountInputEl","$47d4ff9957288465$var$createPromise","position","delay","setTimeout","Promise","resolve","reject","Math","random","then","result","Notify","success","useIcon","catch","error","failure","addEventListener","e","preventDefault","stepDelay","Number","value","userAmount","quantityCall","userDelay","currentDelay","warning","timeout","width","fontSize","cssAnimationStyle","pauseOnHover","showOnlyTheLastOne","i"],"version":3,"file":"03-promises.05ad0c30.js.map"}